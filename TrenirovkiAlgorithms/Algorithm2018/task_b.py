# Аркадий — большой фанат использования машинного обучения в любой задаче. Он верит в безграничную силу волшебства
# этой популярной молодой науки. Именно поэтому Аркадий постоянно постоянно придумывает всё новые и новые факторы,
# которые можно вычислить для различных объектов.
# Напомним, палиндромом называется строка, которая одинаково читается от начала к концу и от конца к началу.
# Для каждой строки в своей базе данных Аркадий хочет найти самую короткую её подстроку, состоящую хотя бы из двух
# символов и являющуюся палиндромом. Если таких подстрок несколько, Аркадий хочет выбрать лексикографически минимальную.
# Формат ввода
# В единственной строке входных данных записана одна строка из базы Аркадия — непустая последовательность строчных
# букв английского алфавита. Длина строки составляет не менее
# 2  и не превосходит 200000 символов.
# Формат вывода
# Выведите минимальную по длине подстроку строки из входных данных, состоящую хотя бы из двух символов и являющуюся
# палиндромом. Если такой подстроки нет, то выведите −1. Напомним, что среди всех таких строк Аркадий
# хочет найти лексикографически минимальную.

# Суть решения в том, что если существует больший палиндром, то всегда должен существовать палиндром из 2-х или
# 3-х букв, т.е. нужно проверить только на них

s = input()
size = 2
palindroms = set()
while size <= 3:
    for i in range(len(s) - size + 1):
        word = s[i:i + size]
        if word == word[::-1]:
            palindroms.add(word)
    if len(palindroms) == 0:
        size += 1
    else:
        break
palindroms = sorted(palindroms)
if palindroms:
    print(palindroms[0])
else:
    print(-1)

